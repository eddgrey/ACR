# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import operaciones_pb2 as operaciones__pb2


class OperacionesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Auth = channel.unary_unary(
                '/practica5.Operaciones/Auth',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Create = channel.unary_unary(
                '/practica5.Operaciones/Create',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Read = channel.unary_stream(
                '/practica5.Operaciones/Read',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Write = channel.stream_unary(
                '/practica5.Operaciones/Write',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Remove = channel.unary_unary(
                '/practica5.Operaciones/Remove',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Rename = channel.unary_unary(
                '/practica5.Operaciones/Rename',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Mkdir = channel.unary_unary(
                '/practica5.Operaciones/Mkdir',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Rmdir = channel.unary_unary(
                '/practica5.Operaciones/Rmdir',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )
        self.Readdir = channel.unary_stream(
                '/practica5.Operaciones/Readdir',
                request_serializer=operaciones__pb2.CamposDeEntrada.SerializeToString,
                response_deserializer=operaciones__pb2.CamposDeSalida.FromString,
                )


class OperacionesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mkdir(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rmdir(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readdir(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OperacionesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Read': grpc.unary_stream_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Write': grpc.stream_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Mkdir': grpc.unary_unary_rpc_method_handler(
                    servicer.Mkdir,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Rmdir': grpc.unary_unary_rpc_method_handler(
                    servicer.Rmdir,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
            'Readdir': grpc.unary_stream_rpc_method_handler(
                    servicer.Readdir,
                    request_deserializer=operaciones__pb2.CamposDeEntrada.FromString,
                    response_serializer=operaciones__pb2.CamposDeSalida.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'practica5.Operaciones', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Operaciones(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Auth',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Create',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/practica5.Operaciones/Read',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/practica5.Operaciones/Write',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Remove',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Rename',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mkdir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Mkdir',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rmdir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/practica5.Operaciones/Rmdir',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readdir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/practica5.Operaciones/Readdir',
            operaciones__pb2.CamposDeEntrada.SerializeToString,
            operaciones__pb2.CamposDeSalida.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
